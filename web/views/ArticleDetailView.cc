//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "ArticleDetailView.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string ArticleDetailView::genText(const DrTemplateData& ArticleDetailView_view_data)
{
	drogon::OStringStream ArticleDetailView_tmp_stream;
	std::string layoutName{""};
	ArticleDetailView_tmp_stream << "<!DOCTYPE html>\n";
	ArticleDetailView_tmp_stream << "<html lang=\"en\">\n";
	ArticleDetailView_tmp_stream << "<head>\n";
	ArticleDetailView_tmp_stream << "    <meta charset=\"UTF-8\">\n";
	ArticleDetailView_tmp_stream << "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
	ArticleDetailView_tmp_stream << "    <title>";
ArticleDetailView_tmp_stream<<ArticleDetailView_view_data.get<std::string>("title");
	ArticleDetailView_tmp_stream << " - Tiny Blog</title>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 引入 Bootstrap CSS -->\n";
	ArticleDetailView_tmp_stream << "    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 引入 Prism.js 样式和核心库 -->\n";
	ArticleDetailView_tmp_stream << "    <link href=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css\" rel=\"stylesheet\">\n";
	ArticleDetailView_tmp_stream << "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\"></script>\n";
	ArticleDetailView_tmp_stream << "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-c.min.js\"></script>\n";
	ArticleDetailView_tmp_stream << "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-javascript.min.js\"></script>\n";
	ArticleDetailView_tmp_stream << "    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-markup.min.js\"></script>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 自定义样式 -->\n";
	ArticleDetailView_tmp_stream << "    <style>\n";
	ArticleDetailView_tmp_stream << "        body {\n";
	ArticleDetailView_tmp_stream << "            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n";
	ArticleDetailView_tmp_stream << "            background-color: #f5f5f5;\n";
	ArticleDetailView_tmp_stream << "            color: #34495e;\n";
	ArticleDetailView_tmp_stream << "            margin: 0;\n";
	ArticleDetailView_tmp_stream << "            padding: 0;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .container {\n";
	ArticleDetailView_tmp_stream << "            max-width: 1200px;\n";
	ArticleDetailView_tmp_stream << "            margin: 0 auto;\n";
	ArticleDetailView_tmp_stream << "            padding: 20px;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 左侧导航栏 */\n";
	ArticleDetailView_tmp_stream << "        .sidebar {\n";
	ArticleDetailView_tmp_stream << "            position: fixed;\n";
	ArticleDetailView_tmp_stream << "            top: 60px;\n";
	ArticleDetailView_tmp_stream << "            left: 0;\n";
	ArticleDetailView_tmp_stream << "            width: 250px;\n";
	ArticleDetailView_tmp_stream << "            height: calc(100vh - 60px);\n";
	ArticleDetailView_tmp_stream << "            background: white;\n";
	ArticleDetailView_tmp_stream << "            border-right: 1px solid #eaeaea;\n";
	ArticleDetailView_tmp_stream << "            overflow-y: auto;\n";
	ArticleDetailView_tmp_stream << "            transition: transform 0.3s ease;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .sidebar ul {\n";
	ArticleDetailView_tmp_stream << "            list-style: none;\n";
	ArticleDetailView_tmp_stream << "            padding: 0;\n";
	ArticleDetailView_tmp_stream << "            margin: 0;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .sidebar li {\n";
	ArticleDetailView_tmp_stream << "            padding: 8px 15px;\n";
	ArticleDetailView_tmp_stream << "            cursor: pointer;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .sidebar li a {\n";
	ArticleDetailView_tmp_stream << "        color: #34495e !important; /* 设置为深灰色 */\n";
	ArticleDetailView_tmp_stream << "        text-decoration: none !important; /* 移除下划线 */\n";
	ArticleDetailView_tmp_stream << "        transition: color 0.3s ease;\n";
	ArticleDetailView_tmp_stream << "    }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .sidebar li:hover a {\n";
	ArticleDetailView_tmp_stream << "            color: #4CAF50 !important; /* 鼠标悬停时变为绿色 */\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .sidebar li.active a {\n";
	ArticleDetailView_tmp_stream << "            color: #4CAF50 !important; /* 当前激活项为绿色 */\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 主内容区域 */\n";
	ArticleDetailView_tmp_stream << "        .main-content {\n";
	ArticleDetailView_tmp_stream << "            margin-left: 270px;\n";
	ArticleDetailView_tmp_stream << "            padding: 20px;\n";
	ArticleDetailView_tmp_stream << "            background: white;\n";
	ArticleDetailView_tmp_stream << "            min-height: 100vh;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .article-header {\n";
	ArticleDetailView_tmp_stream << "            text-align: center;\n";
	ArticleDetailView_tmp_stream << "            margin-bottom: 30px;\n";
	ArticleDetailView_tmp_stream << "            margin-top: 60px; /* 增加顶部外边距 */\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .article-meta {\n";
	ArticleDetailView_tmp_stream << "            display: flex;\n";
	ArticleDetailView_tmp_stream << "            justify-content: center;\n";
	ArticleDetailView_tmp_stream << "            gap: 20px;\n";
	ArticleDetailView_tmp_stream << "            margin-top: 10px;\n";
	ArticleDetailView_tmp_stream << "            color: #666;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .content-box {\n";
	ArticleDetailView_tmp_stream << "            background: white;\n";
	ArticleDetailView_tmp_stream << "            padding: 20px;\n";
	ArticleDetailView_tmp_stream << "            border-radius: 4px;\n";
	ArticleDetailView_tmp_stream << "            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n";
	ArticleDetailView_tmp_stream << "            margin-bottom: 30px;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 标签样式 */\n";
	ArticleDetailView_tmp_stream << "        .tags {\n";
	ArticleDetailView_tmp_stream << "            display: flex;\n";
	ArticleDetailView_tmp_stream << "            gap: 10px;\n";
	ArticleDetailView_tmp_stream << "            margin-top: 20px;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .tag {\n";
	ArticleDetailView_tmp_stream << "            background: #4CAF50;\n";
	ArticleDetailView_tmp_stream << "            color: white; /* 确保文字颜色为白色 */\n";
	ArticleDetailView_tmp_stream << "            padding: 5px 10px;\n";
	ArticleDetailView_tmp_stream << "            border-radius: 20px;\n";
	ArticleDetailView_tmp_stream << "            font-size: 0.9em;\n";
	ArticleDetailView_tmp_stream << "            text-decoration: none !important; /* 移除下划线 */\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .tag a {\n";
	ArticleDetailView_tmp_stream << "            color: inherit; /* 继承父元素颜色 */\n";
	ArticleDetailView_tmp_stream << "            text-decoration: none; /* 移除链接下划线 */\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 响应式设计 */\n";
	ArticleDetailView_tmp_stream << "        @media (max-width: 768px) {\n";
	ArticleDetailView_tmp_stream << "            .sidebar {\n";
	ArticleDetailView_tmp_stream << "                transform: translateX(-250px);\n";
	ArticleDetailView_tmp_stream << "            }\n";
	ArticleDetailView_tmp_stream << "            .main-content {\n";
	ArticleDetailView_tmp_stream << "                margin-left: 0;\n";
	ArticleDetailView_tmp_stream << "            }\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 代码高亮样式 */\n";
	ArticleDetailView_tmp_stream << "        pre code {\n";
	ArticleDetailView_tmp_stream << "            display: block;\n";
	ArticleDetailView_tmp_stream << "            padding: 1rem;\n";
	ArticleDetailView_tmp_stream << "            overflow-x: auto;\n";
	ArticleDetailView_tmp_stream << "            line-height: 1.5;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 右侧目录样式 */\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar {\n";
	ArticleDetailView_tmp_stream << "            position: fixed;\n";
	ArticleDetailView_tmp_stream << "            top: 60px;\n";
	ArticleDetailView_tmp_stream << "            right: 0;\n";
	ArticleDetailView_tmp_stream << "            width: 250px;\n";
	ArticleDetailView_tmp_stream << "            height: calc(100vh - 60px);\n";
	ArticleDetailView_tmp_stream << "            overflow-y: auto;\n";
	ArticleDetailView_tmp_stream << "            background: #fff;\n";
	ArticleDetailView_tmp_stream << "            border-left: 1px solid #eaeaea;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar h4 {\n";
	ArticleDetailView_tmp_stream << "            padding: 15px;\n";
	ArticleDetailView_tmp_stream << "            border-bottom: 1px solid #eaeaea;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar ul {\n";
	ArticleDetailView_tmp_stream << "            list-style: none;\n";
	ArticleDetailView_tmp_stream << "            padding: 0;\n";
	ArticleDetailView_tmp_stream << "            margin: 0;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar li {\n";
	ArticleDetailView_tmp_stream << "            padding: 8px 15px;\n";
	ArticleDetailView_tmp_stream << "            cursor: pointer;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar li:hover {\n";
	ArticleDetailView_tmp_stream << "            background: #f5f5f5;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 搜索栏样式 */\n";
	ArticleDetailView_tmp_stream << "        .search-bar {\n";
	ArticleDetailView_tmp_stream << "            position: fixed;\n";
	ArticleDetailView_tmp_stream << "            top: 0px;\n";
	ArticleDetailView_tmp_stream << "            left:0%;\n";
	ArticleDetailView_tmp_stream << "            display: flex;\n";
	ArticleDetailView_tmp_stream << "            align-items: center;\n";
	ArticleDetailView_tmp_stream << "            background: white;\n";
	ArticleDetailView_tmp_stream << "            padding: 8px 15px;\n";
	ArticleDetailView_tmp_stream << "            border-radius: 20px;\n";
	ArticleDetailView_tmp_stream << "            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .search-bar input {\n";
	ArticleDetailView_tmp_stream << "            border: none;\n";
	ArticleDetailView_tmp_stream << "            outline: none;\n";
	ArticleDetailView_tmp_stream << "            padding: 5px;\n";
	ArticleDetailView_tmp_stream << "            font-size: 0.9em;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .search-bar button {\n";
	ArticleDetailView_tmp_stream << "            background: none;\n";
	ArticleDetailView_tmp_stream << "            border: none;\n";
	ArticleDetailView_tmp_stream << "            cursor: pointer;\n";
	ArticleDetailView_tmp_stream << "            margin-left: 10px;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 移除右侧目录链接的下划线 */\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar a {\n";
	ArticleDetailView_tmp_stream << "            color: #4CAF50; /* 设置为绿色 */\n";
	ArticleDetailView_tmp_stream << "            text-decoration: none !important;\n";
	ArticleDetailView_tmp_stream << "            transition: text-decoration 0.3s ease;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        .right-sidebar a:hover {\n";
	ArticleDetailView_tmp_stream << "            text-decoration: underline !important;\n";
	ArticleDetailView_tmp_stream << "        }\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "        /* 隐藏指定 id 的内容 */\n";
	ArticleDetailView_tmp_stream << "        #heading-0 {\n";
	ArticleDetailView_tmp_stream << "            display: none;\n";
	ArticleDetailView_tmp_stream << "        }\n";
	ArticleDetailView_tmp_stream << "    </style>\n";
	ArticleDetailView_tmp_stream << "</head>\n";
	ArticleDetailView_tmp_stream << "<body>\n";
	ArticleDetailView_tmp_stream << "    <!-- 移动搜索栏到左侧导航栏顶部 -->\n";
	ArticleDetailView_tmp_stream << "    <div class=\"search-bar\">\n";
	ArticleDetailView_tmp_stream << "        <input type=\"text\" placeholder=\"Search...\">\n";
	ArticleDetailView_tmp_stream << "        <button>🔍</button>\n";
	ArticleDetailView_tmp_stream << "    </div>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 左侧导航栏 -->\n";
	ArticleDetailView_tmp_stream << "    <div class=\"sidebar\">\n";
	ArticleDetailView_tmp_stream << "        <ul id=\"nav-links\">\n";
	ArticleDetailView_tmp_stream << "            ";
                // 获取左侧导航栏链接
                std::vector<std::pair<std::string, std::string>> sidebarLinks = ArticleDetailView_view_data.get<std::vector<std::pair<std::string, std::string>>>("sidebarLinks");
                for (const auto &link : sidebarLinks) {
            
	ArticleDetailView_tmp_stream << "            <li><a href=\"";
ArticleDetailView_tmp_stream<<link.first;
	ArticleDetailView_tmp_stream << "\">";
ArticleDetailView_tmp_stream<<link.second;
	ArticleDetailView_tmp_stream << "</a></li>\n";
	ArticleDetailView_tmp_stream << "            ";
 } 
	ArticleDetailView_tmp_stream << "        </ul>\n";
	ArticleDetailView_tmp_stream << "    </div>\n";
	ArticleDetailView_tmp_stream << "    \n";
	ArticleDetailView_tmp_stream << "    <!-- 初始化代码高亮 -->\n";
	ArticleDetailView_tmp_stream << "    <script>\n";
	ArticleDetailView_tmp_stream << "        document.addEventListener('DOMContentLoaded', () => {\n";
	ArticleDetailView_tmp_stream << "            Prism.highlightAll();\n";
	ArticleDetailView_tmp_stream << "        });\n";
	ArticleDetailView_tmp_stream << "    </script>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 动态导航高亮 -->\n";
	ArticleDetailView_tmp_stream << "    <script>\n";
	ArticleDetailView_tmp_stream << "        document.addEventListener('DOMContentLoaded', () => {\n";
	ArticleDetailView_tmp_stream << "            const navLinks = document.querySelectorAll('#nav-links li');\n";
	ArticleDetailView_tmp_stream << "            const sections = document.querySelectorAll('.main-content > div');\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "            window.addEventListener('scroll', () => {\n";
	ArticleDetailView_tmp_stream << "                let currentSection = '';\n";
	ArticleDetailView_tmp_stream << "                sections.forEach(section => {\n";
	ArticleDetailView_tmp_stream << "                    const rect = section.getBoundingClientRect();\n";
	ArticleDetailView_tmp_stream << "                    if (rect.top <= 150 && rect.bottom >= 150) {\n";
	ArticleDetailView_tmp_stream << "                        currentSection = section.id;\n";
	ArticleDetailView_tmp_stream << "                    }\n";
	ArticleDetailView_tmp_stream << "                });\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "                navLinks.forEach(link => {\n";
	ArticleDetailView_tmp_stream << "                    link.classList.remove('active');\n";
	ArticleDetailView_tmp_stream << "                    if (link.getAttribute('data-target') === `#${currentSection}`) {\n";
	ArticleDetailView_tmp_stream << "                        link.classList.add('active');\n";
	ArticleDetailView_tmp_stream << "                    }\n";
	ArticleDetailView_tmp_stream << "                });\n";
	ArticleDetailView_tmp_stream << "            });\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "            // 处理锚点跳转\n";
	ArticleDetailView_tmp_stream << "            const hash = window.location.hash;\n";
	ArticleDetailView_tmp_stream << "            if (hash) {\n";
	ArticleDetailView_tmp_stream << "                const targetElement = document.querySelector(hash);\n";
	ArticleDetailView_tmp_stream << "                if (targetElement) {\n";
	ArticleDetailView_tmp_stream << "                    targetElement.scrollIntoView({ behavior: 'smooth' });\n";
	ArticleDetailView_tmp_stream << "                }\n";
	ArticleDetailView_tmp_stream << "            }\n";
	ArticleDetailView_tmp_stream << "        });\n";
	ArticleDetailView_tmp_stream << "    </script>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 主内容区域 -->\n";
	ArticleDetailView_tmp_stream << "    <div class=\"main-content\">\n";
	ArticleDetailView_tmp_stream << "        <div class=\"container\">\n";
	ArticleDetailView_tmp_stream << "            <div class=\"article-header\">\n";
	ArticleDetailView_tmp_stream << "                <h1>";
ArticleDetailView_tmp_stream<<ArticleDetailView_view_data.get<std::string>("title");
	ArticleDetailView_tmp_stream << "</h1>\n";
	ArticleDetailView_tmp_stream << "                <div class=\"article-meta\">\n";
	ArticleDetailView_tmp_stream << "                    <span>Author: ";
ArticleDetailView_tmp_stream<<ArticleDetailView_view_data.get<std::string>("author");
	ArticleDetailView_tmp_stream << "</span>\n";
	ArticleDetailView_tmp_stream << "                    <span>Date: ";
ArticleDetailView_tmp_stream<<ArticleDetailView_view_data.get<std::string>("date");
	ArticleDetailView_tmp_stream << "</span>\n";
	ArticleDetailView_tmp_stream << "                    <span>Category: ";
ArticleDetailView_tmp_stream<<ArticleDetailView_view_data.get<std::string>("category");
	ArticleDetailView_tmp_stream << "</span>\n";
	ArticleDetailView_tmp_stream << "                </div>\n";
	ArticleDetailView_tmp_stream << "            </div>\n";
	ArticleDetailView_tmp_stream << "            <div class=\"content-box\" id=\"article-content\">\n";
	ArticleDetailView_tmp_stream << "                ";
                    // 确保文章内容中的标题标签带有 id 属性
                    std::string content = ArticleDetailView_view_data.get<std::string>("content");
                    size_t pos = 0;
                    int headingCount = 0;
                    while ((pos = content.find("<h2>", pos)) != std::string::npos) {
                        std::string id = "heading-" + std::to_string(headingCount++);
                        content.insert(pos + 4, " id='" + id + "'");
                        pos += 4 + id.size() + 9; // 跳过插入的部分
                    }
                    pos = 0;
                    while ((pos = content.find("<h3>", pos)) != std::string::npos) {
                        std::string id = "subheading-" + std::to_string(headingCount++);
                        content.insert(pos + 4, " id='" + id + "'");
                        pos += 4 + id.size() + 9; // 跳过插入的部分
                    }
                
	ArticleDetailView_tmp_stream << "                ";
ArticleDetailView_tmp_stream<<content;
	ArticleDetailView_tmp_stream << "            </div>\n";
	ArticleDetailView_tmp_stream << "            <div class=\"tags\">\n";
	ArticleDetailView_tmp_stream << "                ";
                    // 分割标签字符串
                    std::string tagsStr = ArticleDetailView_view_data.get<std::string>("tags");
                    std::vector<std::string> tags;
                    size_t tagPos;
                    while ((tagPos = tagsStr.find(',')) != std::string::npos) {
                        tags.push_back(tagsStr.substr(0, tagPos));
                        tagsStr = tagsStr.substr(tagPos + 1);
                    }
                    if (!tagsStr.empty()) tags.push_back(tagsStr);
                    for (const auto &tag : tags) {
                
	ArticleDetailView_tmp_stream << "                <span class=\"tag\">#<a href=\"/tag/";
ArticleDetailView_tmp_stream<<tag;
	ArticleDetailView_tmp_stream << "\">";
ArticleDetailView_tmp_stream<<tag;
	ArticleDetailView_tmp_stream << "</a></span>\n";
	ArticleDetailView_tmp_stream << "                ";
 } 
	ArticleDetailView_tmp_stream << "            </div>\n";
	ArticleDetailView_tmp_stream << "        </div>\n";
	ArticleDetailView_tmp_stream << "    </div>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "    <!-- 自动生成右侧目录 -->\n";
	ArticleDetailView_tmp_stream << "    <div class=\"right-sidebar\">\n";
	ArticleDetailView_tmp_stream << "        <h4>目录</h4>\n";
	ArticleDetailView_tmp_stream << "        <ul id=\"toc\">\n";
	ArticleDetailView_tmp_stream << "            ";
                // 动态生成右侧目录
                std::string processedContent = ArticleDetailView_view_data.get<std::string>("content");
                size_t h2Pos = 0, h3Pos = 0;
                int h2Count = 0, h3Count = 0;
                while ((h2Pos = processedContent.find("<h2", h2Pos)) != std::string::npos) {
                    size_t endPos = processedContent.find(">", h2Pos);
                    size_t idPos = processedContent.find("id='", h2Pos);
                    if (idPos != std::string::npos && idPos < endPos) {
                        size_t idEndPos = processedContent.find("'", idPos + 4);
                        std::string id = processedContent.substr(idPos + 4, idEndPos - (idPos + 4));
                        size_t textStartPos = endPos + 1;
                        size_t textEndPos = processedContent.find("</h2>", textStartPos);
                        std::string text = processedContent.substr(textStartPos, textEndPos - textStartPos);
        
	ArticleDetailView_tmp_stream << "        <li><a href=\"#";
ArticleDetailView_tmp_stream<<id;
	ArticleDetailView_tmp_stream << "\">";
ArticleDetailView_tmp_stream<<text;
	ArticleDetailView_tmp_stream << "</a></li>\n";
	ArticleDetailView_tmp_stream << "        ";
                }
                h2Pos = endPos;
            }
            while ((h3Pos = processedContent.find("<h3", h3Pos)) != std::string::npos) {
                size_t endPos = processedContent.find(">", h3Pos);
                size_t idPos = processedContent.find("id='", h3Pos);
                if (idPos != std::string::npos && idPos < endPos) {
                    size_t idEndPos = processedContent.find("'", idPos + 4);
                    std::string id = processedContent.substr(idPos + 4, idEndPos - (idPos + 4));
                    size_t textStartPos = endPos + 1;
                    size_t textEndPos = processedContent.find("</h3>", textStartPos);
                    std::string text = processedContent.substr(textStartPos, textEndPos - textStartPos);
        
	ArticleDetailView_tmp_stream << "        <li style=\"margin-left: 20px;\"><a href=\"#";
ArticleDetailView_tmp_stream<<id;
	ArticleDetailView_tmp_stream << "\">";
ArticleDetailView_tmp_stream<<text;
	ArticleDetailView_tmp_stream << "</a></li>\n";
	ArticleDetailView_tmp_stream << "        ";
                }
                h3Pos = endPos;
            }
        
	ArticleDetailView_tmp_stream << "    </ul>\n";
	ArticleDetailView_tmp_stream << "</div>\n";
ArticleDetailView_tmp_stream<<"\n";
	ArticleDetailView_tmp_stream << "</body>\n";
	ArticleDetailView_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(ArticleDetailView_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = ArticleDetailView_view_data;
auto str = std::move(ArticleDetailView_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
